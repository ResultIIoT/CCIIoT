<clones>
<systeminfo processor="nicad6" system="vorto" granularity="functions" threshold="0%" minlines="5" maxlines="2500"/>
<cloneinfo npcs="5013" npairs="113"/>
<runinfo ncompares="245275" cputime="15"/>
<classinfo nclasses="90"/>

<class classid="1" nclones="2" nlines="15" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/demo/src/main/java/org/mycompany/Main.java" startline="30" endline="45" pcid="294">
	public static void main(String[] args) throws Exception {
		MappingEngine engine = MappingEngine
				.createFromInputStream(FileUtils.openInputStream(new File("src/test/resources/mappingspec.json")));
		Map<String, Object> data = new HashMap<String, Object>();
		data.put("distance", "100m");
		InfomodelValue result = engine.mapSource(data);
		if (result.validate().isValid()) {
			JsonObject dittoPayloadToUpdateAllFeatures = TwinPayloadFactory.toDittoProtocol(result, "org.eclipse.vorto", "deviceid-123");
			System.out.println(gson.toJson(dittoPayloadToUpdateAllFeatures));
			
			JsonObject dittoPayloadToUpdateSingleFeature = TwinPayloadFactory.toDittoProtocol(result.get("distance"),"distance", "org.eclipse.vorto", "deviceid-123");
			System.out.println(gson.toJson(dittoPayloadToUpdateSingleFeature));
		} else {
			System.err.println("Mapped data is not valid to Vorto Model");
		}
	}
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-engine-all/src/test/java/org/eclipse/vorto/service/mapping/Example.java" startline="30" endline="47" pcid="542">
  public static void main(String[] args) throws Exception {
    MappingEngine engine = MappingEngine.createFromInputStream(
        FileUtils.openInputStream(new File("src/test/resources/mappingspec.json")));
    Map<String, Object> data = new HashMap<String, Object>();
    data.put("distance", "100m");
    InfomodelValue result = engine.mapSource(data);
    if (result.validate().isValid()) {
      JsonObject dittoPayloadToUpdateAllFeatures =
          TwinPayloadFactory.toDittoProtocol(result, "org.eclipse.vorto", "deviceid-123");
      System.out.println(gson.toJson(dittoPayloadToUpdateAllFeatures));

      JsonObject dittoPayloadToUpdateSingleFeature = TwinPayloadFactory
          .toDittoProtocol(result.get("distance"), "distance", "org.eclipse.vorto", "deviceid-123");
      System.out.println(gson.toJson(dittoPayloadToUpdateSingleFeature));
    } else {
      System.err.println("Mapped data is not valid to Vorto Model");
    }
  }
</source>
</class>

<class classid="2" nclones="2" nlines="11" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-binary/src/test/java/org/eclipse/vorto/mapping/engine/converter/binary/SpecGattConverter.java" startline="30" endline="46" pcid="305">
  protected void createModel() {
    FunctionblockModel buttonModel = new FunctionblockModel(
        ModelId.fromPrettyFormat("demo.fb:PushButton:1.0.0"));
    ModelProperty digitalInputStateProperty = new ModelProperty();
    digitalInputStateProperty.setMandatory(true);
    digitalInputStateProperty.setName("sensor_value");
    digitalInputStateProperty.setType(PrimitiveType.STRING);

    digitalInputStateProperty.setTargetPlatformKey("iotbutton");

    digitalInputStateProperty.addStereotype(Stereotype.createWithXpath(
        "button:convertSensorValue(vorto_conversion1:byteArrayToInt(characteristics[@uuid='23-D1-13-EF-5F-78-23-15-DE-EF-12-12-0D-F0-00-00']/data, 3, 0, 0, 3))"));

    buttonModel.setStatusProperties(Arrays.asList(new ModelProperty[] {digitalInputStateProperty}));

    infomodel.getFunctionblocks().add(ModelProperty.Builder("button",buttonModel).build());
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecGattConverter.java" startline="30" endline="46" pcid="346">
  protected void createModel() {
    FunctionblockModel buttonModel = new FunctionblockModel(
        ModelId.fromPrettyFormat("demo.fb:PushButton:1.0.0"));
    ModelProperty digitalInputStateProperty = new ModelProperty();
    digitalInputStateProperty.setMandatory(true);
    digitalInputStateProperty.setName("sensor_value");
    digitalInputStateProperty.setType(PrimitiveType.STRING);

    digitalInputStateProperty.setTargetPlatformKey("iotbutton");

    digitalInputStateProperty.addStereotype(Stereotype.createWithXpath(
        "button:convertSensorValue(vorto_conversion1:byteArrayToInt(characteristics[@uuid='23-D1-13-EF-5F-78-23-15-DE-EF-12-12-0D-F0-00-00']/data, 3, 0, 0, 3))"));

    buttonModel.setStatusProperties(Arrays.asList(new ModelProperty[] {digitalInputStateProperty}));

    infomodel.getFunctionblocks().add(ModelProperty.Builder("button",buttonModel).build());
  }
</source>
</class>

<class classid="3" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-binary/src/test/java/org/eclipse/vorto/mapping/engine/converter/binary/SpecGattConverter.java" startline="49" endline="56" pcid="306">
  public FunctionLibrary getScriptFunctions(IScriptEvalProvider evalProvider) {
    FunctionLibrary library = new FunctionLibrary();
    IScriptEvaluator evaluator = evalProvider.createEvaluator("button");
    evaluator.addScriptFunction(new ScriptClassFunction("convertSensorValue",
        "function convertSensorValue(value) { return value*0.01; }"));
    library.addFunctions(evaluator.getFunctions());
    return library;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecGattConverter.java" startline="49" endline="56" pcid="347">
  public FunctionLibrary getScriptFunctions(IScriptEvalProvider evalProvider) {
    FunctionLibrary library = new FunctionLibrary();
    IScriptEvaluator evaluator = evalProvider.createEvaluator("button");
    evaluator.addScriptFunction(new ScriptClassFunction("convertSensorValue",
        "function convertSensorValue(value) { return value*0.01; }"));
    library.addFunctions(evaluator.getFunctions());
    return library;
  }
</source>
</class>

<class classid="4" nclones="3" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithConfigMapping.java" startline="30" endline="39" pcid="351">
  protected void createModel() {
    
    FunctionblockModel buttonModel = createButtonFb();
    infomodel.getFunctionblocks().add(ModelProperty.Builder("button",buttonModel).build());
    
    FunctionblockModel voltageModel = createVoltageFb();
    
    infomodel.getFunctionblocks().add(ModelProperty.Builder("voltage",voltageModel).build());

  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithCustomFunction.java" startline="30" endline="37" pcid="359">
  protected void createModel() {
    FunctionblockModel buttonModel = createButtonFb();
    infomodel.getFunctionblocks().add(ModelProperty.Builder("button",buttonModel).build());
    
    FunctionblockModel voltageModel = createVoltageFb();
    
    infomodel.getFunctionblocks().add(ModelProperty.Builder("voltage",voltageModel).build());
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithConstraintConfigMapping.java" startline="32" endline="39" pcid="355">
  protected void createModel() {
    FunctionblockModel buttonModel = createButtonFb();
    infomodel.getFunctionblocks().add(ModelProperty.Builder("button",buttonModel).build());
    
    FunctionblockModel voltageModel = createVoltageFb();
    
    infomodel.getFunctionblocks().add(ModelProperty.Builder("voltage",voltageModel).build());
  }
</source>
</class>

<class classid="5" nclones="2" nlines="17" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithConfigMapping.java" startline="41" endline="67" pcid="352">
  private FunctionblockModel createButtonFb() {
    FunctionblockModel buttonModel = new FunctionblockModel(
        ModelId.fromPrettyFormat("demo.fb:PushButton:1.0.0"));
    ModelProperty digitalInputStateProperty = new ModelProperty();
    digitalInputStateProperty.setMandatory(true);
    digitalInputStateProperty.setName("digital_input_state");
    digitalInputStateProperty.setType(PrimitiveType.BOOLEAN);

    digitalInputStateProperty.setTargetPlatformKey("iotbutton");

    digitalInputStateProperty
        .addStereotype(Stereotype.createWithXpath("boolean:toBoolean(\"true\")"));

    ModelProperty digitalInputCount = new ModelProperty();
    digitalInputCount.setMandatory(true);
    digitalInputCount.setName("digital_input_count");
    digitalInputCount.setType(PrimitiveType.INT);

    digitalInputCount.setTargetPlatformKey("iotbutton");
    digitalInputCount
        .addStereotype(Stereotype.createWithXpath("button:convertClickType(clickType)"));

    buttonModel.setConfigurationProperties(
        Arrays.asList(new ModelProperty[] {digitalInputStateProperty, digitalInputCount}));

    return buttonModel;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithConstraintConfigMapping.java" startline="41" endline="67" pcid="356">
  private FunctionblockModel createButtonFb() {
    FunctionblockModel buttonModel = new FunctionblockModel(
        ModelId.fromPrettyFormat("demo.fb:PushButton:1.0.0"));
    ModelProperty digitalInputStateProperty = new ModelProperty();
    digitalInputStateProperty.setMandatory(true);
    digitalInputStateProperty.setName("digital_input_state");
    digitalInputStateProperty.setType(PrimitiveType.BOOLEAN);

    digitalInputStateProperty.setTargetPlatformKey("iotbutton");

    digitalInputStateProperty
        .addStereotype(Stereotype.createWithXpath("boolean:toBoolean(\"true\")"));

    ModelProperty digitalInputCount = new ModelProperty();
    digitalInputCount.setMandatory(true);
    digitalInputCount.setName("digital_input_count");
    digitalInputCount.setType(PrimitiveType.INT);

    digitalInputCount.setTargetPlatformKey("iotbutton");
    digitalInputCount
        .addStereotype(Stereotype.createWithXpath("button:convertClickType(clickType)"));

    buttonModel.setConfigurationProperties(
        Arrays.asList(new ModelProperty[] {digitalInputStateProperty, digitalInputCount}));

    return buttonModel;
  }
</source>
</class>

<class classid="6" nclones="4" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithConfigMapping.java" startline="98" endline="106" pcid="354">
  public FunctionLibrary getScriptFunctions(IScriptEvalProvider evalProvider) {
    FunctionLibrary library = new FunctionLibrary();
    IScriptEvaluator evaluator = evalProvider.createEvaluator("button");
    evaluator.addScriptFunction(new ScriptClassFunction("convertClickType",
        "function convertClickType(clickType) {if (clickType === 'SINGLE') return 1; else if (clickType === 'DOUBLE') return 2; else return 99;}"));
    library.addFunctions(evaluator.getFunctions());

    return library;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithConstraintConfigMapping.java" startline="99" endline="107" pcid="358">
  public FunctionLibrary getScriptFunctions(IScriptEvalProvider evalProvider) {
    FunctionLibrary library = new FunctionLibrary();
    IScriptEvaluator evaluator = evalProvider.createEvaluator("button");
    evaluator.addScriptFunction(new ScriptClassFunction("convertClickType",
        "function convertClickType(clickType) {if (clickType === 'SINGLE') return 1; else if (clickType === 'DOUBLE') return 2; else return 99;}"));
    library.addFunctions(evaluator.getFunctions());

    return library;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithNestedEntityAndCustomFunction.java" startline="45" endline="53" pcid="370">
  public FunctionLibrary getScriptFunctions(IScriptEvalProvider evalProvider) {
    FunctionLibrary library = new FunctionLibrary();
    IScriptEvaluator evaluator = evalProvider.createEvaluator("button");
    evaluator.addScriptFunction(new ScriptClassFunction("convertClickType",
        "function convertClickType(clickType) {if (clickType === 'SINGLE') return 1; else if (clickType === 'DOUBLE') return 2; else return 99;}"));
    library.addFunctions(evaluator.getFunctions());

    return library;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-converter-javascript/src/test/java/org/eclipse/vorto/mapping/engine/converter/javascript/SpecWithCustomFunction.java" startline="95" endline="103" pcid="362">
  public FunctionLibrary getScriptFunctions(IScriptEvalProvider evalProvider) {
    FunctionLibrary library = new FunctionLibrary();
    IScriptEvaluator evaluator = evalProvider.createEvaluator("button");
    evaluator.addScriptFunction(new ScriptClassFunction("convertClickType",
        "function convertClickType(clickType) {if (clickType === 'SINGLE') return 1; else if (clickType === 'DOUBLE') return 2; else return 99;}"));
    library.addFunctions(evaluator.getFunctions());

    return library;
  }
</source>
</class>

<class classid="7" nclones="3" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-core/src/main/java/org/eclipse/vorto/mapping/engine/model/spec/MappingSpecBuilder.java" startline="57" endline="64" pcid="465">
        public IPropertyAttribute deserialize(JsonElement jsonElement, Type type,
            JsonDeserializationContext context) throws JsonParseException {
          if (jsonElement.getAsJsonObject().get("value").isJsonPrimitive()) {
            return context.deserialize(jsonElement, BooleanAttributeProperty.class);
          } else {
            return context.deserialize(jsonElement, EnumAttributeProperty.class);
          }
        }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/api/impl/ImplementationBase.java" startline="57" endline="64" pcid="4324">
				public IPropertyAttribute deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext context)
						throws JsonParseException {
					if (jsonElement.getAsJsonObject().get("value").isJsonPrimitive()) {
						return context.deserialize(jsonElement, BooleanAttributeProperty.class);
					} else {
						return context.deserialize(jsonElement, EnumAttributeProperty.class);
					}
				}
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/impl/ImplementationBase.java" startline="76" endline="83" pcid="4429">
                public IPropertyAttribute deserialize(JsonElement jsonElement, Type type,
                        JsonDeserializationContext context) throws JsonParseException {
                    if (jsonElement.getAsJsonObject().get("value").isJsonPrimitive()) {
                        return context.deserialize(jsonElement, BooleanAttributeProperty.class);
                    } else {
                        return context.deserialize(jsonElement, EnumAttributeProperty.class);
                    }
                }
</source>
</class>

<class classid="8" nclones="2" nlines="12" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-core/src/main/java/org/eclipse/vorto/mapping/engine/twin/TwinPayloadFactory.java" startline="44" endline="59" pcid="487">
  public static JsonObject toDittoProtocol(InfomodelValue infomodelData, String dittoNamespace,
      String dittoIdSuffix) {
    Map<String, Object> dittoPayload = new HashMap<String, Object>();
    dittoPayload.put("topic",
        dittoNamespace + "/" + dittoIdSuffix + "/things/twin/commands/modify");
    dittoPayload.put("headers", createHeader());
    dittoPayload.put("path", "/features");

    Map<String, Object> newFeatures = new HashMap<String, Object>();
    for (String infomodelProperty : infomodelData.getProperties().keySet()) {
      newFeatures.put(infomodelProperty, createFeature(infomodelData.get(infomodelProperty)));

    }
    dittoPayload.put("value", newFeatures);
    return gson.toJsonTree(dittoPayload).getAsJsonObject();
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-targetplatform/mapping-targetplatform-ditto/src/main/java/org/eclipse/vorto/mapping/targetplatform/ditto/TwinPayloadFactory.java" startline="83" endline="98" pcid="590">
  public static JsonObject toDittoProtocol(InfomodelValue infomodelData, String dittoNamespace,
      String dittoIdSuffix) {
    Map<String, Object> dittoPayload = new HashMap<String, Object>();
    dittoPayload.put("topic",
        dittoNamespace + "/" + dittoIdSuffix + "/things/twin/commands/modify");
    dittoPayload.put("headers", createHeader());
    dittoPayload.put("path", "/features");

    Map<String, Object> newFeatures = new HashMap<String, Object>();
    for (String infomodelProperty : infomodelData.getProperties().keySet()) {
      newFeatures.put(infomodelProperty, createFeature(infomodelData.get(infomodelProperty)));

    }
    dittoPayload.put("value", newFeatures);
    return gson.toJsonTree(dittoPayload).getAsJsonObject();
  }
</source>
</class>

<class classid="9" nclones="2" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-core/src/main/java/org/eclipse/vorto/mapping/engine/twin/TwinPayloadFactory.java" startline="61" endline="66" pcid="488">
  private static Object createFeature(FunctionblockValue fbData) {
    Map<String, Object> feature = new HashMap<String, Object>();
    feature.put("definition", Arrays.asList(fbData.getMeta().getId().getPrettyFormat()));
    feature.put("properties", createFunctionBlockProperties(fbData));
    return feature;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-targetplatform/mapping-targetplatform-ditto/src/main/java/org/eclipse/vorto/mapping/targetplatform/ditto/TwinPayloadFactory.java" startline="100" endline="105" pcid="591">
  private static Object createFeature(FunctionblockValue fbData) {
    Map<String, Object> feature = new HashMap<String, Object>();
    feature.put("definition", Arrays.asList(fbData.getMeta().getId().getPrettyFormat()));
    feature.put("properties", createFunctionBlockProperties(fbData));
    return feature;
  }
</source>
</class>

<class classid="10" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-core/src/main/java/org/eclipse/vorto/mapping/engine/twin/TwinPayloadFactory.java" startline="68" endline="72" pcid="489">
  private static Object createHeader() {
    Map<String, Object> header = new HashMap<String, Object>();
    header.put("response-required", false);
    return header;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-targetplatform/mapping-targetplatform-ditto/src/main/java/org/eclipse/vorto/mapping/targetplatform/ditto/TwinPayloadFactory.java" startline="107" endline="111" pcid="592">
  private static Object createHeader() {
    Map<String, Object> header = new HashMap<String, Object>();
    header.put("response-required", false);
    return header;
  }
</source>
</class>

<class classid="11" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-core/src/main/java/org/eclipse/vorto/mapping/engine/twin/TwinPayloadFactory.java" startline="84" endline="94" pcid="490">
  public static JsonObject toDittoProtocol(FunctionblockValue functionblockData, String featureId,
      String dittoNamespace, String dittoIdSuffix) {
    Map<String, Object> dittoPayload = new HashMap<String, Object>();
    dittoPayload.put("topic",
        dittoNamespace + "/" + dittoIdSuffix + "/things/twin/commands/modify");
    dittoPayload.put("headers", createHeader());
    dittoPayload.put("path", "/features/" + featureId + "/properties");

    dittoPayload.put("value", createFunctionBlockProperties(functionblockData));
    return gson.toJsonTree(dittoPayload).getAsJsonObject();
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-targetplatform/mapping-targetplatform-ditto/src/main/java/org/eclipse/vorto/mapping/targetplatform/ditto/TwinPayloadFactory.java" startline="123" endline="133" pcid="593">
  public static JsonObject toDittoProtocol(FunctionblockValue functionblockData, String featureId,
      String dittoNamespace, String dittoIdSuffix) {
    Map<String, Object> dittoPayload = new HashMap<String, Object>();
    dittoPayload.put("topic",
        dittoNamespace + "/" + dittoIdSuffix + "/things/twin/commands/modify");
    dittoPayload.put("headers", createHeader());
    dittoPayload.put("path", "/features/" + featureId + "/properties");

    dittoPayload.put("value", createFunctionBlockProperties(functionblockData));
    return gson.toJsonTree(dittoPayload).getAsJsonObject();
  }
</source>
</class>

<class classid="12" nclones="2" nlines="18" similarity="100">
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-core/src/main/java/org/eclipse/vorto/mapping/engine/twin/TwinPayloadFactory.java" startline="96" endline="120" pcid="491">
  private static Map<String,Object> createFunctionBlockProperties(FunctionblockValue fbData) {
    Map<String, Object> result = new HashMap<String, Object>();

    Map<String, Object> status = new HashMap<String, Object>();

    for (PropertyValue statusProperty : fbData.getStatus()) {
      status.put(statusProperty.getMeta().getName(), statusProperty.serialize());
    }
    
    if (!status.isEmpty()) {
      result.put("status", status);
    }

    Map<String, Object> config = new HashMap<String, Object>();

    for (PropertyValue configProperty : fbData.getConfiguration()) {
      config.put(configProperty.getMeta().getName(), configProperty.serialize());
    }
    
    if (!config.isEmpty()) {
      result.put("configuration", config);
    }
    
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/mapping-engine/mapping-targetplatform/mapping-targetplatform-ditto/src/main/java/org/eclipse/vorto/mapping/targetplatform/ditto/TwinPayloadFactory.java" startline="135" endline="159" pcid="594">
  private static Map<String,Object> createFunctionBlockProperties(FunctionblockValue fbData) {
    Map<String, Object> result = new HashMap<String, Object>();

    Map<String, Object> status = new HashMap<String, Object>();

    for (PropertyValue statusProperty : fbData.getStatus()) {
      status.put(statusProperty.getMeta().getName(), statusProperty.serialize());
    }
    
    if (!status.isEmpty()) {
      result.put("status", status);
    }

    Map<String, Object> config = new HashMap<String, Object>();

    for (PropertyValue configProperty : fbData.getConfiguration()) {
      config.put(configProperty.getMeta().getName(), configProperty.serialize());
    }
    
    if (!config.isEmpty()) {
      result.put("configuration", config);
    }
    
    return result;
  }
</source>
</class>

<class classid="13" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/AbstractProperty.java" startline="83" endline="90" pcid="640">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + (mandatory ? 1231 : 1237);
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + ((type == null) ? 0 : type.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/AbstractProperty.java" startline="84" endline="91" pcid="1549">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + (mandatory ? 1231 : 1237);
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + ((type == null) ? 0 : type.hashCode());
    return result;
  }
</source>
</class>

<class classid="14" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/AbstractProperty.java" startline="93" endline="100" pcid="641">
  public boolean equals(Object obj) {
    AbstractProperty other = (AbstractProperty) obj;
    if (mandatory == other.mandatory && name.equals(other.name) && type.equals(other.type))
      return true;
    else {
      return false;
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/AbstractProperty.java" startline="94" endline="101" pcid="1550">
  public boolean equals(Object obj) {
    AbstractProperty other = (AbstractProperty) obj;
    if (mandatory == other.mandatory && name.equals(other.name) && type.equals(other.type))
      return true;
    else {
      return false;
    }
  }
</source>
</class>

<class classid="15" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/BooleanAttributeProperty.java" startline="21" endline="25" pcid="642">
  public BooleanAttributeProperty(BooleanAttributePropertyType type, boolean value) {
    super();
    this.type = type;
    this.value = value;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/BooleanAttributeProperty.java" startline="22" endline="26" pcid="1551">
  public BooleanAttributeProperty(BooleanAttributePropertyType type, boolean value) {
    super();
    this.type = type;
    this.value = value;
  }
</source>
</class>

<class classid="16" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/EnumAttributeProperty.java" startline="20" endline="24" pcid="684">
  public EnumAttributeProperty(EnumAttributePropertyType type, EnumLiteral value) {
    super();
    this.type = type;
    this.value = value;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/EnumAttributeProperty.java" startline="21" endline="25" pcid="1578">
  public EnumAttributeProperty(EnumAttributePropertyType type, EnumLiteral value) {
    super();
    this.type = type;
    this.value = value;
  }
</source>
</class>

<class classid="17" nclones="2" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/ModelId.java" startline="33" endline="38" pcid="764">
  public ModelId(String name, String namespace, String version) {
    super();
    this.name = name;
    this.namespace = namespace.toLowerCase();
    this.version = version;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelId.java" startline="28" endline="33" pcid="1706">
  public ModelId(String name, String namespace, String version) {
    super();
    this.name = name;
    this.namespace = namespace.toLowerCase();
    this.version = version;
  }
</source>
</class>

<class classid="18" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/ModelId.java" startline="40" endline="44" pcid="765">
  public static ModelId fromReference(String qualifiedName, String version) {
    String name = qualifiedName.substring(qualifiedName.lastIndexOf(".") + 1);
    String namespace = qualifiedName.substring(0, qualifiedName.lastIndexOf("."));
    return new ModelId(name, namespace, version);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelId.java" startline="35" endline="39" pcid="1707">
  public static ModelId fromReference(String qualifiedName, String version) {
    String name = qualifiedName.substring(qualifiedName.lastIndexOf(".") + 1);
    String namespace = qualifiedName.substring(0, qualifiedName.lastIndexOf("."));
    return new ModelId(name, namespace, version);
  }
</source>
</class>

<class classid="19" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/ModelId.java" startline="92" endline="99" pcid="775">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + ((namespace == null) ? 0 : namespace.hashCode());
    result = prime * result + ((version == null) ? 0 : version.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelId.java" startline="86" endline="93" pcid="1717">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + ((namespace == null) ? 0 : namespace.hashCode());
    result = prime * result + ((version == null) ? 0 : version.hashCode());
    return result;
  }
</source>
</class>

<class classid="20" nclones="2" nlines="18" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/ModelType.java" startline="31" endline="44" pcid="799">
  public static ModelType fromFileName(String fileName) {
    String type = fileName.substring(fileName.lastIndexOf("."));
    if (type.equals(ModelType.Functionblock.getExtension())) {
      return ModelType.Functionblock;
    } else if (type.equals(ModelType.InformationModel.getExtension())) {
      return ModelType.InformationModel;
    } else if (type.equals(ModelType.Datatype.getExtension())) {
      return ModelType.Datatype;
    } else if (type.equals(ModelType.Mapping.getExtension())) {
      return ModelType.Mapping;
    } else {
      throw new UnsupportedOperationException();
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelType.java" startline="32" endline="45" pcid="1754">
  public static ModelType fromFileName(String fileName) {
    String type = fileName.substring(fileName.lastIndexOf("."));
    if (type.equals(ModelType.Functionblock.getExtension())) {
      return ModelType.Functionblock;
    } else if (type.equals(ModelType.InformationModel.getExtension())) {
      return ModelType.InformationModel;
    } else if (type.equals(ModelType.Datatype.getExtension())) {
      return ModelType.Datatype;
    } else if (type.equals(ModelType.Mapping.getExtension())) {
      return ModelType.Mapping;
    } else {
      throw new UnsupportedOperationException();
    }
  }
</source>
</class>

<class classid="21" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/ModelType.java" startline="46" endline="53" pcid="800">
  public static boolean containsType(String type) {
    for (ModelType mType : ModelType.values()) {
      if (mType.name().equals(type)) {
        return true;
      }
    }
    return false;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelType.java" startline="47" endline="54" pcid="1755">
  public static boolean containsType(String type) {
    for (ModelType mType : ModelType.values()) {
      if (mType.name().equals(type)) {
        return true;
      }
    }
    return false;
  }
</source>
</class>

<class classid="22" nclones="2" nlines="17" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/ModelType.java" startline="64" endline="77" pcid="802">
  public boolean canHandleReference(IModel reference) {
    if (this == ModelType.InformationModel && reference.getType() == ModelType.Functionblock) {
      return true;
    } else if (this == ModelType.Functionblock && (reference.getType() == ModelType.Functionblock
        || reference.getType() == ModelType.Datatype)) {
      return true;
    } else if (this == ModelType.Datatype && reference.getType() == ModelType.Datatype) {
      return true;
    } else if (this == ModelType.Mapping) { // mapping allow all reference types
      return true;
    } else {
      return false;
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelType.java" startline="56" endline="69" pcid="1756">
  public boolean canHandleReference(IModel reference) {
    if (this == ModelType.InformationModel && reference.getType() == ModelType.Functionblock) {
      return true;
    } else if (this == ModelType.Functionblock && (reference.getType() == ModelType.Functionblock
        || reference.getType() == ModelType.Datatype)) {
      return true;
    } else if (this == ModelType.Datatype && reference.getType() == ModelType.Datatype) {
      return true;
    } else if (this == ModelType.Mapping) { // mapping allow all reference types
      return true;
    } else {
      return false;
    }
  }
</source>
</class>

<class classid="23" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/Stereotype.java" startline="33" endline="37" pcid="839">
  public static Stereotype createWithFunction(String functionName, String functionBody) {
    Map<String, String> attributes = new HashMap<String, String>(1);
    attributes.put(functionName, functionBody);
    return new Stereotype(FUNCTIONS, attributes);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/Stereotype.java" startline="34" endline="38" pcid="1646">
  public static Stereotype createWithFunction(String functionName, String functionBody) {
    Map<String, String> attributes = new HashMap<String, String>(1);
    attributes.put(functionName, functionBody);
    return new Stereotype(FUNCTIONS, attributes);
  }
</source>
</class>

<class classid="24" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/Stereotype.java" startline="39" endline="43" pcid="840">
  public static Stereotype createWithXpath(String xpath) {
    Map<String, String> attributes = new HashMap<String, String>(1);
    attributes.put(XPATH_ATT, xpath);
    return new Stereotype(SOURCE, attributes);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/Stereotype.java" startline="40" endline="44" pcid="1647">
  public static Stereotype createWithXpath(String xpath) {
    Map<String, String> attributes = new HashMap<String, String>(1);
    attributes.put(XPATH_ATT, xpath);
    return new Stereotype(SOURCE, attributes);
  }
</source>
</class>

<class classid="25" nclones="2" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/Stereotype.java" startline="45" endline="50" pcid="841">
  public static Stereotype createOperationTarget(String key, String value) {
    Map<String, String> attributes = new HashMap<String, String>(1);
    attributes.put(KEY_ATT, key);
    attributes.put(VALUE_ATT, value);
    return new Stereotype(TARGET, attributes);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/Stereotype.java" startline="46" endline="51" pcid="1648">
  public static Stereotype createOperationTarget(String key, String value) {
    Map<String, String> attributes = new HashMap<String, String>(1);
    attributes.put(KEY_ATT, key);
    attributes.put(VALUE_ATT, value);
    return new Stereotype(TARGET, attributes);
  }
</source>
</class>

<class classid="26" nclones="2" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/Stereotype.java" startline="63" endline="68" pcid="844">
  public static Stereotype createWithConditionalXpath(String condition, String xpath) {
    Map<String, String> attributes = new HashMap<String, String>(2);
    attributes.put(CONDITION_ATT, condition);
    attributes.put(XPATH_ATT, xpath);
    return new Stereotype(SOURCE, attributes);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/Stereotype.java" startline="58" endline="63" pcid="1650">
  public static Stereotype createWithConditionalXpath(String condition, String xpath) {
    Map<String, String> attributes = new HashMap<String, String>(2);
    attributes.put(CONDITION_ATT, condition);
    attributes.put(XPATH_ATT, xpath);
    return new Stereotype(SOURCE, attributes);
  }
</source>
</class>

<class classid="27" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/Stereotype.java" startline="105" endline="111" pcid="853">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((attributes == null) ? 0 : attributes.hashCode());
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/Stereotype.java" startline="100" endline="106" pcid="1659">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((attributes == null) ? 0 : attributes.hashCode());
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    return result;
  }
</source>
</class>

<class classid="28" nclones="2" nlines="15" similarity="100">
<source file="E:/Git/II/latest/vorto/model/src/main/java/org/eclipse/vorto/model/Stereotype.java" startline="114" endline="133" pcid="854">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    Stereotype other = (Stereotype) obj;
    if (attributes == null) {
      if (other.attributes != null)
        return false;
    } else if (!attributes.equals(other.attributes))
      return false;
    if (name == null) {
      if (other.name != null)
        return false;
    } else if (!name.equals(other.name))
      return false;
    return true;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/content/Stereotype.java" startline="109" endline="128" pcid="1660">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    Stereotype other = (Stereotype) obj;
    if (attributes == null) {
      if (other.attributes != null)
        return false;
    } else if (!attributes.equals(other.attributes))
      return false;
    if (name == null) {
      if (other.name != null)
        return false;
    } else if (!name.equals(other.name))
      return false;
    return true;
  }
</source>
</class>

<class classid="29" nclones="3" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/adapter/ObjectMapperFactory.java" startline="132" endline="140" pcid="987">
    private ModelId getModelId(String modelId) {
      try {
        return ModelId.fromPrettyFormat(modelId);
      } catch (IllegalArgumentException ex) {
        final int versionIndex = modelId.indexOf(":");
        return ModelId.fromReference(modelId.substring(0, versionIndex),
            modelId.substring(versionIndex + 1));
      }
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/impl/ImplementationBase.java" startline="148" endline="155" pcid="4432">
        private ModelId getModelId(String modelId) {
            try {
                return ModelId.fromPrettyFormat(modelId);
            } catch(IllegalArgumentException ex) {
                final int versionIndex = modelId.indexOf(":");
                return ModelId.fromReference(modelId.substring(0,versionIndex),modelId.substring(versionIndex+1));
            }
        }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/utils/ObjectMapperFactory.java" startline="177" endline="185" pcid="1397">
    private ModelId getModelId(String modelId) {
      try {
        return ModelId.fromPrettyFormat(modelId);
      } catch (IllegalArgumentException ex) {
        final int versionIndex = modelId.indexOf(":");
        return ModelId.fromReference(modelId.substring(0, versionIndex),
            modelId.substring(versionIndex + 1));
      }
    }
</source>
</class>

<class classid="30" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/config/ConfigTemplateBuilder.java" startline="64" endline="68" pcid="1004">
    private ChoiceItem(String label, String value) {
      super();
      this.label = label;
      this.value = value;
    }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/GeneratorInfo.java" startline="136" endline="140" pcid="1252">
    private ChoiceItem(String label, String value) {
      super();
      this.label = label;
      this.value = value;
    }
</source>
</class>

<class classid="31" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="95" endline="108" pcid="1040">
  public IMapped<InformationModel> getMappedElement(final InformationModel informationModel,
      final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof InfomodelSource
            && EcoreUtil.equals(((InfomodelSource) ruleSource).getModel(), informationModel)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<InformationModel>(informationModel,
              (StereoTypeTarget) rule.getTarget());
        }
      }
    }
    return new NullMapped<InformationModel>(informationModel);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="105" endline="118" pcid="1295">
  public IMapped<InformationModel> getMappedElement(final InformationModel informationModel,
      final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof InfomodelSource
            && EcoreUtil.equals(((InfomodelSource) ruleSource).getModel(), informationModel)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<InformationModel>(informationModel,
              (StereoTypeTarget) rule.getTarget());
        }
      }
    }
    return new NullMapped<InformationModel>(informationModel);
  }
</source>
</class>

<class classid="32" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="117" endline="130" pcid="1041">
  public IMapped<FunctionblockModel> getMappedElement(final FunctionblockModel functionblockModel,
      final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof FunctionBlockSource
            && EcoreUtil.equals(((FunctionBlockSource) ruleSource).getModel(), functionblockModel)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<FunctionblockModel>(functionblockModel,
              (StereoTypeTarget) rule.getTarget());
        }
      }
    }
    return new NullMapped<FunctionblockModel>(functionblockModel);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="127" endline="140" pcid="1296">
  public IMapped<FunctionblockModel> getMappedElement(final FunctionblockModel functionblockModel,
      final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof FunctionBlockSource
            && EcoreUtil.equals(((FunctionBlockSource) ruleSource).getModel(), functionblockModel)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<FunctionblockModel>(functionblockModel,
              (StereoTypeTarget) rule.getTarget());
        }
      }
    }
    return new NullMapped<FunctionblockModel>(functionblockModel);
  }
</source>
</class>

<class classid="33" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="139" endline="151" pcid="1042">
  public IMapped<EnumLiteral> getMappedElement(final EnumLiteral enumLiteral,
      final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof EnumPropertySource
            && EcoreUtil.equals(((EnumPropertySource) ruleSource).getProperty(), enumLiteral)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<EnumLiteral>(enumLiteral, (StereoTypeTarget) rule.getTarget());
        }
      }
    }
    return new NullMapped<EnumLiteral>(enumLiteral);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="149" endline="161" pcid="1297">
  public IMapped<EnumLiteral> getMappedElement(final EnumLiteral enumLiteral,
      final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof EnumPropertySource
            && EcoreUtil.equals(((EnumPropertySource) ruleSource).getProperty(), enumLiteral)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<EnumLiteral>(enumLiteral, (StereoTypeTarget) rule.getTarget());
        }
      }
    }
    return new NullMapped<EnumLiteral>(enumLiteral);
  }
</source>
</class>

<class classid="34" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="158" endline="164" pcid="1044">
  private boolean matchesProperty(final Property srcProp, final Property tgtProp) {
    FunctionBlock srcFb = (FunctionBlock) srcProp.eContainer().eContainer();
    FunctionBlock tgtFb = (FunctionBlock) tgtProp.eContainer().eContainer();
    FunctionblockModel srcFbModel = (FunctionblockModel) srcFb.eContainer();
    FunctionblockModel tgtFbModel = (FunctionblockModel) tgtFb.eContainer();
    return EcoreUtil.equals(srcProp, tgtProp) && EcoreUtil.equals(srcFbModel, tgtFbModel);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="168" endline="174" pcid="1299">
  private boolean matchesProperty(final Property srcProp, final Property tgtProp) {
    FunctionBlock srcFb = (FunctionBlock) srcProp.eContainer().eContainer();
    FunctionBlock tgtFb = (FunctionBlock) tgtProp.eContainer().eContainer();
    FunctionblockModel srcFbModel = (FunctionblockModel) srcFb.eContainer();
    FunctionblockModel tgtFbModel = (FunctionblockModel) tgtFb.eContainer();
    return EcoreUtil.equals(srcProp, tgtProp) && EcoreUtil.equals(srcFbModel, tgtFbModel);
  }
</source>
</class>

<class classid="35" nclones="2" nlines="19" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="173" endline="198" pcid="1045">
  public IMapped<Property> getMappedElement(final Property property, final String stereoType) {

    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof ConfigurationSource
            && matchesProperty(((ConfigurationSource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        } else if (ruleSource instanceof StatusSource
            && matchesProperty(((StatusSource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        } else if (ruleSource instanceof FaultSource
            && matchesProperty(((FaultSource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        } else if (ruleSource instanceof EntityPropertySource
            && matchesProperty(((EntityPropertySource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        }
      }
    }

    return new NullMapped<Property>(property);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="183" endline="208" pcid="1300">
  public IMapped<Property> getMappedElement(final Property property, final String stereoType) {

    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof ConfigurationSource
            && matchesProperty(((ConfigurationSource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        } else if (ruleSource instanceof StatusSource
            && matchesProperty(((StatusSource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        } else if (ruleSource instanceof FaultSource
            && matchesProperty(((FaultSource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        } else if (ruleSource instanceof EntityPropertySource
            && matchesProperty(((EntityPropertySource) ruleSource).getProperty(), property)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Property>(property, (StereoTypeTarget) rule.getTarget());
        }
      }
    }

    return new NullMapped<Property>(property);
  }
</source>
</class>

<class classid="36" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="200" endline="206" pcid="1046">
  private boolean matchesOperation(final Operation srcOp, final Operation tgtOp) {
    FunctionBlock srcFb = (FunctionBlock) srcOp.eContainer();
    FunctionBlock tgtFb = (FunctionBlock) tgtOp.eContainer();
    FunctionblockModel srcFbModel = (FunctionblockModel) srcFb.eContainer();
    FunctionblockModel tgtFbModel = (FunctionblockModel) tgtFb.eContainer();
    return EcoreUtil.equals(srcOp, tgtOp) && EcoreUtil.equals(srcFbModel, tgtFbModel);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="210" endline="216" pcid="1301">
  private boolean matchesOperation(final Operation srcOp, final Operation tgtOp) {
    FunctionBlock srcFb = (FunctionBlock) srcOp.eContainer();
    FunctionBlock tgtFb = (FunctionBlock) tgtOp.eContainer();
    FunctionblockModel srcFbModel = (FunctionblockModel) srcFb.eContainer();
    FunctionblockModel tgtFbModel = (FunctionblockModel) tgtFb.eContainer();
    return EcoreUtil.equals(srcOp, tgtOp) && EcoreUtil.equals(srcFbModel, tgtFbModel);
  }
</source>
</class>

<class classid="37" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="215" endline="227" pcid="1047">
  public IMapped<Operation> getMappedElement(final Operation operation, final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof OperationSource
            && matchesOperation(((OperationSource) ruleSource).getOperation(), operation)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Operation>(operation, (StereoTypeTarget) rule.getTarget());
        }
      }
    }

    return new NullMapped<Operation>(operation);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="225" endline="237" pcid="1302">
  public IMapped<Operation> getMappedElement(final Operation operation, final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (ruleSource instanceof OperationSource
            && matchesOperation(((OperationSource) ruleSource).getOperation(), operation)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<Operation>(operation, (StereoTypeTarget) rule.getTarget());
        }
      }
    }

    return new NullMapped<Operation>(operation);
  }
</source>
</class>

<class classid="38" nclones="2" nlines="19" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/InvocationContext.java" startline="236" endline="262" pcid="1048">
  public IMapped<ModelAttribute> getMappedModelAttribute(final Model model,
      final ModelAttribute attribute, final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (model instanceof InformationModel && ruleSource instanceof InfoModelAttributeSource
            && ((InfoModelAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        } else if (model instanceof FunctionblockModel
            && ruleSource instanceof FunctionBlockAttributeSource
            && ((FunctionBlockAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        } else if (model instanceof Enum && ruleSource instanceof EnumAttributeSource
            && ((EnumAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        } else if (model instanceof Entity && ruleSource instanceof EnumAttributeSource
            && ((EntityAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        }
      }
    }

    return new NullMapped<ModelAttribute>(attribute);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/InvocationContext.java" startline="246" endline="272" pcid="1303">
  public IMapped<ModelAttribute> getMappedModelAttribute(final Model model,
      final ModelAttribute attribute, final String stereoType) {
    for (MappingRule rule : mappingRules) {
      for (Source ruleSource : rule.getSources()) {
        if (model instanceof InformationModel && ruleSource instanceof InfoModelAttributeSource
            && ((InfoModelAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        } else if (model instanceof FunctionblockModel
            && ruleSource instanceof FunctionBlockAttributeSource
            && ((FunctionBlockAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        } else if (model instanceof Enum && ruleSource instanceof EnumAttributeSource
            && ((EnumAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        } else if (model instanceof Entity && ruleSource instanceof EnumAttributeSource
            && ((EntityAttributeSource) ruleSource).getAttribute().equals(attribute)
            && matchesStereoType(stereoType, (StereoTypeTarget) rule.getTarget())) {
          return new DefaultMapped<ModelAttribute>(attribute, (StereoTypeTarget) rule.getTarget());
        }
      }
    }

    return new NullMapped<ModelAttribute>(attribute);
  }
</source>
</class>

<class classid="39" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/mapping/DefaultMapped.java" startline="40" endline="48" pcid="1055">
  public boolean hasAttribute(String attributeName) {
    for (Attribute attribute : stereoType.getAttributes()) {
      if (attribute.getName().equalsIgnoreCase(attributeName)) {
        return true;
      }
    }

    return false;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/mapping/DefaultMapped.java" startline="44" endline="52" pcid="1317">
  public boolean hasAttribute(String attributeName) {
    for (Attribute attribute : stereoType.getAttributes()) {
      if (attribute.getName().equalsIgnoreCase(attributeName)) {
        return true;
      }
    }

    return false;
  }
</source>
</class>

<class classid="40" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/mapping/DefaultMapped.java" startline="51" endline="59" pcid="1056">
  public String getAttributeValue(String attributeName, String defaultValue) {
    for (Attribute attribute : stereoType.getAttributes()) {
      if (attribute.getName().equalsIgnoreCase(attributeName)) {
        return attribute.getValue();
      }
    }

    return defaultValue;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/mapping/DefaultMapped.java" startline="55" endline="63" pcid="1318">
  public String getAttributeValue(String attributeName, String defaultValue) {
    for (Attribute attribute : stereoType.getAttributes()) {
      if (attribute.getName().equalsIgnoreCase(attributeName)) {
        return attribute.getValue();
      }
    }

    return defaultValue;
  }
</source>
</class>

<class classid="41" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/ChainedCodeGeneratorTask.java" startline="32" endline="36" pcid="1066">
  public void generate(Element element, InvocationContext context, IGeneratedWriter outputter) {
    for (ICodeGeneratorTask<Element> task : tasks) {
      task.generate(element, context, outputter);
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/ChainedCodeGeneratorTask.java" startline="30" endline="34" pcid="1200">
  public void generate(Element element, InvocationContext context, IGeneratedWriter outputter) {
    for (ICodeGeneratorTask<Element> task : tasks) {
      task.generate(element, context, outputter);
    }
  }
</source>
</class>

<class classid="42" nclones="2" nlines="14" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/DatatypeGeneratorTask.java" startline="50" endline="66" pcid="1068">
  public void generate(InformationModel ctx, InvocationContext context, IGeneratedWriter writer) {
    Set<Type> allTypesUsedInModel = new HashSet<>();
    for (FunctionblockProperty prop : ctx.getProperties()) {
      allTypesUsedInModel.addAll(getTypes(prop.getType()));
    }

    for (Type type : allTypesUsedInModel) {
      if (type instanceof Entity) {
        writer.write(new Generated(entityTemplate.getFileName((Entity) type),
            entityTemplate.getPath((Entity) type),
            entityTemplate.getContent((Entity) type, context)));
      } else if (type instanceof Enum) {
        writer.write(new Generated(enumTemplate.getFileName((Enum) type),
            enumTemplate.getPath((Enum) type), enumTemplate.getContent((Enum) type, context)));
      }
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/DatatypeGeneratorTask.java" startline="46" endline="62" pcid="1209">
  public void generate(InformationModel ctx, InvocationContext context, IGeneratedWriter writer) {
    Set<Type> allTypesUsedInModel = new HashSet<>();
    for (FunctionblockProperty prop : ctx.getProperties()) {
      allTypesUsedInModel.addAll(getTypes(prop.getType()));
    }

    for (Type type : allTypesUsedInModel) {
      if (type instanceof Entity) {
        writer.write(new Generated(entityTemplate.getFileName((Entity) type),
            entityTemplate.getPath((Entity) type),
            entityTemplate.getContent((Entity) type, context)));
      } else if (type instanceof Enum) {
        writer.write(new Generated(enumTemplate.getFileName((Enum) type),
            enumTemplate.getPath((Enum) type), enumTemplate.getContent((Enum) type, context)));
      }
    }
  }
</source>
</class>

<class classid="43" nclones="2" nlines="17" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/DatatypeGeneratorTask.java" startline="68" endline="82" pcid="1069">
  private static Set<Type> getTypes(FunctionblockModel model) {
    Set<Type> allTypes = new LinkedHashSet<>();
    TreeIterator<EObject> iterator = model.eAllContents();
    while (iterator.hasNext()) {
      EObject current = iterator.next();
      if (current instanceof RefParam) {
        addTypeAndReferences(((RefParam) current).getType(), allTypes);
      } else if (current instanceof ReturnObjectType) {
        addTypeAndReferences(((ReturnObjectType) current).getReturnType(), allTypes);
      } else if (current instanceof ObjectPropertyType) {
        addTypeAndReferences(((ObjectPropertyType) current).getType(), allTypes);
      }
    }
    return allTypes;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/DatatypeGeneratorTask.java" startline="64" endline="78" pcid="1210">
  private static Set<Type> getTypes(FunctionblockModel model) {
    Set<Type> allTypes = new LinkedHashSet<>();
    TreeIterator<EObject> iterator = model.eAllContents();
    while (iterator.hasNext()) {
      EObject current = iterator.next();
      if (current instanceof RefParam) {
        addTypeAndReferences(((RefParam) current).getType(), allTypes);
      } else if (current instanceof ReturnObjectType) {
        addTypeAndReferences(((ReturnObjectType) current).getReturnType(), allTypes);
      } else if (current instanceof ObjectPropertyType) {
        addTypeAndReferences(((ObjectPropertyType) current).getType(), allTypes);
      }
    }
    return allTypes;
  }
</source>
</class>

<class classid="44" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/DatatypeGeneratorTask.java" startline="84" endline="90" pcid="1070">
  private static void addTypeAndReferences(Type type, Set<Type> container) {
    if (!container.contains(type)) {
      container.add(type);
      Set<Type> references = getTypesOfType(type, container);
      container.addAll(references);
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/DatatypeGeneratorTask.java" startline="80" endline="86" pcid="1211">
  private static void addTypeAndReferences(Type type, Set<Type> container) {
    if (!container.contains(type)) {
      container.add(type);
      Set<Type> references = getTypesOfType(type, container);
      container.addAll(references);
    }
  }
</source>
</class>

<class classid="45" nclones="2" nlines="14" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/DatatypeGeneratorTask.java" startline="92" endline="107" pcid="1071">
  private static Set<Type> getTypesOfType(Type type, Set<Type> container) {
    TreeIterator<EObject> iterator = type.eAllContents();
    while (iterator.hasNext()) {
      EObject current = iterator.next();
      if (current instanceof ObjectPropertyType) {
        if (!container.contains(current)) {
          container.add(((ObjectPropertyType) current).getType());
          Set<Type> moreTypes = getTypesOfType(((ObjectPropertyType) current).getType(), container);
          container.addAll(moreTypes);
        }

      }
    }

    return container;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/DatatypeGeneratorTask.java" startline="88" endline="103" pcid="1212">
  private static Set<Type> getTypesOfType(Type type, Set<Type> container) {
    TreeIterator<EObject> iterator = type.eAllContents();
    while (iterator.hasNext()) {
      EObject current = iterator.next();
      if (current instanceof ObjectPropertyType) {
        if (!container.contains(current)) {
          container.add(((ObjectPropertyType) current).getType());
          Set<Type> moreTypes = getTypesOfType(((ObjectPropertyType) current).getType(), container);
          container.addAll(moreTypes);
        }

      }
    }

    return container;
  }
</source>
</class>

<class classid="46" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/FileContent.java" startline="20" endline="24" pcid="1072">
  public FileContent(String fileName, byte[] value) {
    super();
    this.fileName = fileName;
    this.value = value;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/FileContent.java" startline="24" endline="28" pcid="1218">
  public FileContent(String fileName, byte[] value) {
    super();
    this.fileName = fileName;
    this.value = value;
  }
</source>
</class>

<class classid="47" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/Generated.java" startline="25" endline="29" pcid="1075">
  public Generated(String fileName, String folderPath, byte[] content) {
    this.fileName = fileName;
    this.folderPath = folderPath;
    this.content = content;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/Generated.java" startline="26" endline="30" pcid="1221">
  public Generated(String fileName, String folderPath, byte[] content) {
    this.fileName = fileName;
    this.folderPath = folderPath;
    this.content = content;
  }
</source>
</class>

<class classid="48" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/GenerationResultZip.java" startline="35" endline="39" pcid="1086">
  public GenerationResultZip(String fileName) {
    this.fileName = fileName;
    baos = new ByteArrayOutputStream();
    this.zos = new ZipOutputStream(baos);
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/GenerationResultZip.java" startline="32" endline="36" pcid="1227">
  public GenerationResultZip(String fileName) {
    this.fileName = fileName;
    baos = new ByteArrayOutputStream();
    this.zos = new ZipOutputStream(baos);
  }
</source>
</class>

<class classid="49" nclones="2" nlines="15" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/GenerationResultZip.java" startline="46" endline="63" pcid="1088">
  public void write(Generated generated) {
    ZipEntry zipEntry;
    if (generated.getFolderPath() == null || generated.getFolderPath().isEmpty()) {
      zipEntry = new ZipEntry(generated.getFileName());
    } else {
      zipEntry = new ZipEntry(
          cleanDirectoryPath(generated.getFolderPath()) + "/" + generated.getFileName());
    }

    try {
      zos.putNextEntry(zipEntry);
      zos.write(generated.getContent());
      zos.closeEntry();
    } catch (Exception e) {
      // possibly occurs if generated output already appears as zipentry, in this case skip and
      // continue. TODO: Ugly :(
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/GenerationResultZip.java" startline="43" endline="60" pcid="1229">
  public void write(Generated generated) {
    ZipEntry zipEntry;
    if (generated.getFolderPath() == null || generated.getFolderPath().isEmpty()) {
      zipEntry = new ZipEntry(generated.getFileName());
    } else {
      zipEntry = new ZipEntry(
          cleanDirectoryPath(generated.getFolderPath()) + "/" + generated.getFileName());
    }

    try {
      zos.putNextEntry(zipEntry);
      zos.write(generated.getContent());
      zos.closeEntry();
    } catch (Exception e) {
      // possibly occurs if generated output already appears as zipentry, in this case skip and
      // continue. TODO: Ugly :(
    }
  }
</source>
</class>

<class classid="50" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/GenerationResultZip.java" startline="65" endline="76" pcid="1089">
  private String cleanDirectoryPath(String outputDirectory) {
    String _outputDirectory = outputDirectory;
    if (outputDirectory.charAt(outputDirectory.length() - 1) == '/') {
      _outputDirectory = outputDirectory.substring(0, outputDirectory.length() - 1);
    }

    if (_outputDirectory.charAt(0) == '/') {
      _outputDirectory = _outputDirectory.substring(1);
    }

    return _outputDirectory;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/GenerationResultZip.java" startline="62" endline="73" pcid="1230">
  private String cleanDirectoryPath(String outputDirectory) {
    String _outputDirectory = outputDirectory;
    if (outputDirectory.charAt(outputDirectory.length() - 1) == '/') {
      _outputDirectory = outputDirectory.substring(0, outputDirectory.length() - 1);
    }

    if (_outputDirectory.charAt(0) == '/') {
      _outputDirectory = _outputDirectory.substring(1);
    }

    return _outputDirectory;
  }
</source>
</class>

<class classid="51" nclones="2" nlines="9" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/GenerationResultZip.java" startline="79" endline="87" pcid="1090">
  public byte[] getContent() {
    try {
      zos.close();
      baos.close();
    } catch (IOException ex) {
      ex.printStackTrace();
    }
    return baos.toByteArray();
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/api/GenerationResultZip.java" startline="76" endline="84" pcid="1231">
  public byte[] getContent() {
    try {
      zos.close();
      baos.close();
    } catch (IOException ex) {
      ex.printStackTrace();
    }
    return baos.toByteArray();
  }
</source>
</class>

<class classid="52" nclones="2" nlines="14" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/javatemplates/ValueMapper.java" startline="33" endline="43" pcid="1098">
  public static String mapSimpleDatatype(PrimitiveType type) {
    if (type.compareTo(PrimitiveType.STRING) == 0) {
      return "String";
    } else if (type.compareTo(PrimitiveType.DATETIME) == 0) {
      return "java.util.Date";
    } else if (type.compareTo(PrimitiveType.BASE64_BINARY) == 0) {
      return "byte[]";
    } else {
      return type.getLiteral();
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-templates-java/src/main/java/org/eclipse/vorto/codegen/templates/java/utils/ValueMapper.java" startline="37" endline="47" pcid="1500">
  public static String mapSimpleDatatype(PrimitiveType type) {
    if (type.compareTo(PrimitiveType.STRING) == 0) {
      return "String";
    } else if (type.compareTo(PrimitiveType.DATETIME) == 0) {
      return "java.util.Date";
    } else if (type.compareTo(PrimitiveType.BASE64_BINARY) == 0) {
      return "byte[]";
    } else {
      return type.getLiteral();
    }
  }
</source>
</class>

<class classid="53" nclones="2" nlines="27" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/generator/utils/javatemplates/ValueMapper.java" startline="45" endline="64" pcid="1099">
  public static String getInitialValue(PrimitiveType type) {
    if (type.compareTo(PrimitiveType.STRING) == 0) {
      return "\"\"";
    } else if (type.compareTo(PrimitiveType.BOOLEAN) == 0) {
      return "false";
    } else if (type.compareTo(PrimitiveType.INT) == 0) {
      return "0";
    } else if (type.compareTo(PrimitiveType.FLOAT) == 0) {
      return "0.0f";
    } else if (type.compareTo(PrimitiveType.DOUBLE) == 0) {
      return "0.0d";
    } else if (type.compareTo(PrimitiveType.DATETIME) == 0) {
      return "new java.util.Date()";
    } else if (type.compareTo(PrimitiveType.SHORT) == 0) {
      return "0";
    } else if (type.compareTo(PrimitiveType.BASE64_BINARY) == 0) {
      return "null";
    }
    return "";
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-templates-java/src/main/java/org/eclipse/vorto/codegen/templates/java/utils/ValueMapper.java" startline="49" endline="68" pcid="1501">
  public static String getInitialValue(PrimitiveType type) {
    if (type.compareTo(PrimitiveType.STRING) == 0) {
      return "\"\"";
    } else if (type.compareTo(PrimitiveType.BOOLEAN) == 0) {
      return "false";
    } else if (type.compareTo(PrimitiveType.INT) == 0) {
      return "0";
    } else if (type.compareTo(PrimitiveType.FLOAT) == 0) {
      return "0.0f";
    } else if (type.compareTo(PrimitiveType.DOUBLE) == 0) {
      return "0.0d";
    } else if (type.compareTo(PrimitiveType.DATETIME) == 0) {
      return "new java.util.Date()";
    } else if (type.compareTo(PrimitiveType.SHORT) == 0) {
      return "0";
    } else if (type.compareTo(PrimitiveType.BASE64_BINARY) == 0) {
      return "null";
    }
    return "";
  }
</source>
</class>

<class classid="54" nclones="2" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/utils/ApiGatewayResponse.java" startline="34" endline="39" pcid="1150">
  public ApiGatewayResponse(int statusCode, String body, Map<String, String> headers, boolean isBase64Encoded) {
      this.statusCode = statusCode;
      this.body = body;
      this.headers = headers;
      this.isBase64Encoded = isBase64Encoded;
  }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/utils/ApiGatewayResponse.java" startline="33" endline="38" pcid="1369">
  public ApiGatewayResponse(int statusCode, String body, Map<String, String> headers, boolean isBase64Encoded) {
      this.statusCode = statusCode;
      this.body = body;
      this.headers = headers;
      this.isBase64Encoded = isBase64Encoded;
  }
</source>
</class>

<class classid="55" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/utils/ApiGatewayResponse.java" startline="99" endline="103" pcid="1161">
      public Builder setBinaryBody(byte[] binaryBody) {
          this.binaryBody = binaryBody;
          setBase64Encoded(true);
          return this;
      }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/utils/ApiGatewayResponse.java" startline="93" endline="97" pcid="1379">
      public Builder setBinaryBody(byte[] binaryBody) {
          this.binaryBody = binaryBody;
          setBase64Encoded(true);
          return this;
      }
</source>
</class>

<class classid="56" nclones="2" nlines="18" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/utils/ApiGatewayResponse.java" startline="110" endline="125" pcid="1163">
      public ApiGatewayResponse build() {
          String body = null;
          if (rawBody != null) {
              body = rawBody;
          } else if (objectBody != null) {
              try {
                  body = objectMapper.writeValueAsString(objectBody);
              } catch (JsonProcessingException e) {
                  LOG.error("could not serialize object to json", e);
                  throw new RuntimeException(e);
              }
          } else if (binaryBody != null) {
              body = new String(Base64.getEncoder().encode(binaryBody), StandardCharsets.UTF_8);
          }
          return new ApiGatewayResponse(statusCode, body, headers, base64Encoded);
      }
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/utils/ApiGatewayResponse.java" startline="104" endline="119" pcid="1381">
      public ApiGatewayResponse build() {
          String body = null;
          if (rawBody != null) {
              body = rawBody;
          } else if (objectBody != null) {
              try {
                  body = objectMapper.writeValueAsString(objectBody);
              } catch (JsonProcessingException e) {
                  LOG.error("could not serialize object to json", e);
                  throw new RuntimeException(e);
              }
          } else if (binaryBody != null) {
              body = new String(Base64.getEncoder().encode(binaryBody), StandardCharsets.UTF_8);
          }
          return new ApiGatewayResponse(statusCode, body, headers, base64Encoded);
      }
</source>
</class>

<class classid="57" nclones="2" nlines="11" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/utils/Utils.java" startline="29" endline="37" pcid="1164">
	public static InformationModel toInformationModel(Model model) {
		if (model instanceof InformationModel) {
			return (InformationModel) model;
		} else if (model instanceof FunctionblockModel) {
			return Utils.wrapFunctionBlock((FunctionblockModel) model);
		} else {
			throw new UnsupportedOperationException("model must either be a information- or function block model");
		}
	}
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/utils/Utils.java" startline="41" endline="50" pcid="1398">
  public static InformationModel toInformationModel(Model model) {
    if (model instanceof InformationModel) {
      return (InformationModel) model;
    } else if (model instanceof FunctionblockModel) {
      return Utils.wrapFunctionBlock((FunctionblockModel) model);
    } else {
      throw new UnsupportedOperationException(
          "model must either be a information- or function block model");
    }
  }
</source>
</class>

<class classid="58" nclones="2" nlines="18" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-api/src/main/java/org/eclipse/vorto/plugin/utils/Utils.java" startline="39" endline="58" pcid="1165">
	public static InformationModel wrapFunctionBlock(FunctionblockModel fbModel) {
		InformationModel infomodel = InformationModelFactory.eINSTANCE.createInformationModel();
		infomodel.setCategory(fbModel.getCategory());
		infomodel.setDescription(fbModel.getDescription());
		infomodel.setDisplayname(fbModel.getDisplayname());
		infomodel.setName(fbModel.getName() + "IM");
		infomodel.setNamespace(fbModel.getNamespace());
		infomodel.setVersion(fbModel.getVersion());

		FunctionblockProperty property = InformationModelFactory.eINSTANCE.createFunctionblockProperty();
		property.setType(fbModel);
		property.setName(fbModel.getName().toLowerCase());
		infomodel.getProperties().add(property);

		ModelReference reference = ModelFactory.eINSTANCE.createModelReference();
		reference.setImportedNamespace(fbModel.getNamespace() + "." + fbModel.getName());
		reference.setVersion(fbModel.getVersion());
		infomodel.getReferences().add(reference);
		return infomodel;
	}
</source>
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-api/src/main/java/org/eclipse/vorto/codegen/utils/Utils.java" startline="52" endline="72" pcid="1399">
  public static InformationModel wrapFunctionBlock(FunctionblockModel fbModel) {
    InformationModel infomodel = InformationModelFactory.eINSTANCE.createInformationModel();
    infomodel.setCategory(fbModel.getCategory());
    infomodel.setDescription(fbModel.getDescription());
    infomodel.setDisplayname(fbModel.getDisplayname());
    infomodel.setName(fbModel.getName() + "IM");
    infomodel.setNamespace(fbModel.getNamespace());
    infomodel.setVersion(fbModel.getVersion());

    FunctionblockProperty property =
        InformationModelFactory.eINSTANCE.createFunctionblockProperty();
    property.setType(fbModel);
    property.setName(fbModel.getName().toLowerCase());
    infomodel.getProperties().add(property);

    ModelReference reference = ModelFactory.eINSTANCE.createModelReference();
    reference.setImportedNamespace(fbModel.getNamespace() + "." + fbModel.getName());
    reference.setVersion(fbModel.getVersion());
    infomodel.getReferences().add(reference);
    return infomodel;
  }
</source>
</class>

<class classid="59" nclones="2" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/plugin-sdk/plugin-generator/generator-runner-spi/src/main/java/org/eclipse/vorto/codegen/spi/service/ServerGeneratorLookup.java" startline="58" endline="65" pcid="1468">
    private String extractFileNameFromHeader(ResponseEntity<byte[]> entity) {
      List<String> values = entity.getHeaders().get("content-disposition");
      if (values.size() > 0) {
        int indexOfFileNameStart = values.get(0).indexOf("=");
        return values.get(0).substring(indexOfFileNameStart + 1);
      }
      return "generated.output";
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/plugin/generator/impl/DefaultGeneratorPluginService.java" startline="263" endline="270" pcid="2783">
  private String extractFileNameFromHeader(ResponseEntity<byte[]> entity) {
    List<String> values = entity.getHeaders().get("content-disposition");
    if (values.size() > 0) {
      int indexOfFileNameStart = values.get(0).indexOf("=");
      return values.get(0).substring(indexOfFileNameStart + 1);
    }
    return "generated.output";
  }
</source>
</class>

<class classid="60" nclones="3" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/attachment/Tag.java" startline="49" endline="55" pcid="1534">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((label == null) ? 0 : label.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/attachment/Tag.java" startline="48" endline="54" pcid="4375">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((label == null) ? 0 : label.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/core/Tag.java" startline="55" endline="61" pcid="2318">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((label == null) ? 0 : label.hashCode());
    return result;
  }
</source>
</class>

<class classid="61" nclones="3" nlines="15" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/attachment/Tag.java" startline="58" endline="77" pcid="1535">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    Tag other = (Tag) obj;
    if (id == null) {
      if (other.id != null)
        return false;
    } else if (!id.equals(other.id))
      return false;
    if (label == null) {
      if (other.label != null)
        return false;
    } else if (!label.equals(other.label))
      return false;
    return true;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/attachment/Tag.java" startline="57" endline="76" pcid="4376">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    Tag other = (Tag) obj;
    if (id == null) {
      if (other.id != null)
        return false;
    } else if (!id.equals(other.id))
      return false;
    if (label == null) {
      if (other.label != null)
        return false;
    } else if (!label.equals(other.label))
      return false;
    return true;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/core/Tag.java" startline="64" endline="83" pcid="2319">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    Tag other = (Tag) obj;
    if (id == null) {
      if (other.id != null)
        return false;
    } else if (!id.equals(other.id))
      return false;
    if (label == null) {
      if (other.label != null)
        return false;
    } else if (!label.equals(other.label))
      return false;
    return true;
  }
</source>
</class>

<class classid="62" nclones="3" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/generation/GeneratedOutput.java" startline="29" endline="33" pcid="1668">
  public GeneratedOutput(byte[] content, String fileName, long size) {
    this.content = content;
    this.fileName = fileName;
    this.size = size;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/generation/GeneratedOutput.java" startline="28" endline="32" pcid="4377">
  public GeneratedOutput(byte[] content, String fileName, long size) {
    this.content = content;
    this.fileName = fileName;
    this.size = size;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/plugin/generator/GeneratedOutput.java" startline="29" endline="33" pcid="2741">
  public GeneratedOutput(byte[] content, String fileName, long size) {
    this.content = content;
    this.fileName = fileName;
    this.size = size;
  }
</source>
</class>

<class classid="63" nclones="3" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelInfo.java" startline="110" endline="116" pcid="1738">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((type == null) ? 0 : type.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/ModelInfo.java" startline="112" endline="118" pcid="4468">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((type == null) ? 0 : type.hashCode());
    return result;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/core/ModelInfo.java" startline="130" endline="136" pcid="2260">
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((id == null) ? 0 : id.hashCode());
    result = prime * result + ((type == null) ? 0 : type.hashCode());
    return result;
  }
</source>
</class>

<class classid="64" nclones="2" nlines="11" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelInfo.java" startline="119" endline="134" pcid="1739">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    ModelInfo other = (ModelInfo) obj;
    if (id == null) {
      if (other.id != null)
        return false;
    } else if (!id.equals(other.id))
      return false;

    return (type == other.type);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/ModelInfo.java" startline="121" endline="136" pcid="4469">
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    ModelInfo other = (ModelInfo) obj;
    if (id == null) {
      if (other.id != null)
        return false;
    } else if (!id.equals(other.id))
      return false;

    return (type == other.type);
  }
</source>
</class>

<class classid="65" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-api/src/main/java/org/eclipse/vorto/repository/api/ModelInfo.java" startline="136" endline="140" pcid="1740">
  public void addPlatformMapping(String targetPlatform, ModelId mappingId) {
    if (targetPlatform != null && !targetPlatform.equals("")) {
      this.platformMappings.put(targetPlatform, mappingId);
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/ModelInfo.java" startline="138" endline="142" pcid="4470">
  public void addPlatformMapping(String targetPlatform, ModelId mappingId) {
    if (targetPlatform != null && !targetPlatform.equals("")) {
      this.platformMappings.put(targetPlatform, mappingId);
    }
  }
</source>
</class>

<class classid="66" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/account/impl/DefaultUserAccountService.java" startline="122" endline="129" pcid="1763">
  public boolean exists(UserDto user) {
    try {
      return cache.withUser(user).getUser() != null;
    }
    catch (DoesNotExistException dnee) {
      return false;
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/services/UserService.java" startline="327" endline="334" pcid="2975">
  public boolean exists(UserDto user) {
    try {
      return cache.withUser(user).getUser() != null;
    }
    catch (DoesNotExistException dnee) {
      return false;
    }
  }
</source>
</class>

<class classid="67" nclones="2" nlines="16" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/core/impl/parser/AbstractModelParser.java" startline="224" endline="243" pcid="2050">
  private Optional<Resource> createResource(String fileName, byte[] fileContent,
      XtextResourceSet resourceSet) {
    Objects.requireNonNull(fileName);
    Objects.requireNonNull(fileContent);
    Objects.requireNonNull(resourceSet);

    String filename = "file-" + UUID.randomUUID().toString().replace("-", "") + "-" + fileName;

    Resource resource = resourceSet.createResource(URI.createURI("dummy:/" + filename));
    if (resource != null) {
      try {
        resource.load(new ByteArrayInputStream(fileContent), resourceSet.getLoadOptions());
        return Optional.of(resource);
      } catch (IOException e) {
        throw new ValidationException(e.getMessage(), null);
      }
    }

    return Optional.empty();
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/core/impl/parser/LocalModelWorkspace.java" startline="91" endline="110" pcid="2066">
  private Optional<Resource> createResource(String fileName, byte[] fileContent,
      XtextResourceSet resourceSet) {
    Objects.requireNonNull(fileName);
    Objects.requireNonNull(fileContent);
    Objects.requireNonNull(resourceSet);

    String filename = "file-" + UUID.randomUUID().toString().replace("-", "") + "-" + fileName;

    Resource resource = resourceSet.createResource(URI.createURI("dummy:/" + filename));
    if (resource != null) {
      try {
        resource.load(new ByteArrayInputStream(fileContent), resourceSet.getLoadOptions());
        return Optional.of(resource);
      } catch (IOException e) {
        throw new ValidationException(e.getMessage(), null);
      }
    }

    return Optional.empty();
  }
</source>
</class>

<class classid="68" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/main/java/org/eclipse/vorto/repository/oauth/AbstractOAuthProvider.java" startline="84" endline="99" pcid="2648">
  protected OAuth2Authentication createAuthentication(String clientId, String userId, String name, 
      String email, Set<IRole> roles) {
    UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(
        name, "N/A", SpringUserUtils.toAuthorityList(roles));

    Map<String, Object> detailsMap = new HashMap<>();
    detailsMap.put(JWT_SUB, userId);
    detailsMap.put(JWT_NAME, name);
    detailsMap.put(JWT_EMAIL, email);
    authToken.setDetails(detailsMap);
    
    OAuth2Request request =
        new OAuth2Request(null, clientId, null, true, null, null, null, null, null);

    return new OAuth2Authentication(request, authToken);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-boschid/src/main/java/org/eclipse/vorto/repository/oauth/BoschIoTSuiteOAuthProviderAuthCode.java" startline="195" endline="210" pcid="4528">
  protected OAuth2Authentication createAuthentication(String clientId, String userId, String name,
      String email, Set<IRole> roles) {
    UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(
        name, "N/A", SpringUserUtils.toAuthorityList(roles));

    Map<String, Object> detailsMap = new HashMap<>();
    detailsMap.put(JWT_SUB, userId);
    detailsMap.put(JWT_NAME, name);
    detailsMap.put(JWT_EMAIL, email);
    authToken.setDetails(detailsMap);

    OAuth2Request request =
        new OAuth2Request(null, clientId, null, true, null, null, null, null, null);

    return new OAuth2Authentication(request, authToken);
  }
</source>
</class>

<class classid="69" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/NameSearchSimpleTest.java" startline="36" endline="41" pcid="3723">
  public static void beforeClass() throws Exception {
    testInfrastructure = new SearchTestInfrastructure();
    testInfrastructure.importModel("Color.type");
    // "control group": extraneous model that should never appear in search
    testInfrastructure.importModel("HueLightStrips.infomodel");
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/NameSearchSimpleTest.java" startline="35" endline="40" pcid="4117">
  public static void beforeClass() throws Exception {
    testInfrastructure = new SearchTestInfrastructure();
    testInfrastructure.importModel("Color.type");
    // "control group": extraneous model that should never appear in search
    testInfrastructure.importModel("HueLightStrips.infomodel");
  }
</source>
</class>

<class classid="70" nclones="2" nlines="6" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/NamespaceSearchSimpleTest.java" startline="36" endline="46" pcid="3753">
  public static void beforeClass() throws Exception {

    testInfrastructure = new SearchTestInfrastructure();
    
    // Switcher fb with namespace com.mycompany.fb
    testInfrastructure.importModel(testInfrastructure.FUNCTIONBLOCK_MODEL);
    // ColorLight im with namespace com.mycompany
    testInfrastructure.importModel(testInfrastructure.INFORMATION_MODEL);
    // ColorLight ios mapping with very different namespace org.eclipse.vorto.examples.type
    testInfrastructure.importModel(testInfrastructure.MAPPING_MODEL);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/NamespaceSearchSimpleTest.java" startline="35" endline="45" pcid="4147">
  public static void beforeClass() throws Exception {

    testInfrastructure = new SearchTestInfrastructure();

    // Switcher fb with namespace com.mycompany.fb
    testInfrastructure.importModel(testInfrastructure.FUNCTIONBLOCK_MODEL);
    // ColorLight im with namespace com.mycompany
    testInfrastructure.importModel(testInfrastructure.INFORMATION_MODEL);
    // ColorLight ios mapping with very different namespace org.eclipse.vorto.examples.type
    testInfrastructure.importModel(testInfrastructure.MAPPING_MODEL);
  }
</source>
</class>

<class classid="71" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/SearchTestInfrastructure.java" startline="469" endline="475" pcid="3768">
  private Namespace mockNamespace() {
    Namespace namespace = new Namespace();
    namespace.setName("org.eclipse.vorto");
    namespace.setId(1L);
    namespace.setWorkspaceId("playground");
    return namespace;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/SearchTestInfrastructure.java" startline="670" endline="676" pcid="4178">
  private Namespace mockNamespace() {
    Namespace namespace = new Namespace();
    namespace.setName("org.eclipse.vorto");
    namespace.setId(1L);
    namespace.setWorkspaceId("playground");
    return namespace;
  }
</source>
</class>

<class classid="72" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/SearchTestInfrastructure.java" startline="489" endline="497" pcid="3772">
  protected Authentication createAuthenticationToken(String username) {
    if (username.equalsIgnoreCase("admin")) {
      return new TestingAuthenticationToken(username, username, RepositoryRole.SYS_ADMIN.getName());
    }
    Collection<IRole> roles = Sets.newHashSet(RoleProvider.modelReviewer());

    return new TestingAuthenticationToken(username, username,
        roles.stream().map(IRole::getName).toArray(String[]::new));
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/UnitTestBase.java" startline="558" endline="566" pcid="4013">
  protected Authentication createAuthenticationToken(String username) {
    if (username.equalsIgnoreCase("admin")) {
      return new TestingAuthenticationToken(username, username, RepositoryRole.SYS_ADMIN.getName());
    }
    Collection<IRole> roles = Sets.newHashSet(RoleProvider.modelReviewer());

    return new TestingAuthenticationToken(username, username,
        roles.stream().map(IRole::getName).toArray(String[]::new));
  }
</source>
</class>

<class classid="73" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/SearchTestInfrastructure.java" startline="512" endline="516" pcid="3773">
  protected IUserContext createUserContext(String username, String workspaceId) {
    Authentication authentication = createAuthenticationToken(username);
    SecurityContextHolder.getContext().setAuthentication(authentication);
    return UserContext.user(authentication, workspaceId);
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/SearchTestInfrastructure.java" startline="575" endline="579" pcid="4167">
  protected IUserContext createUserContext(String username, String workspaceId) {
    Authentication authentication = createAuthenticationToken(username);
    SecurityContextHolder.getContext().setAuthentication(authentication);
    return UserContext.user(authentication, workspaceId);
  }
</source>
</class>

<class classid="74" nclones="2" nlines="14" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/SearchTestInfrastructure.java" startline="526" endline="545" pcid="3776">
  protected ModelInfo importModel(String modelName, IUserContext userContext) {
    try {
      UploadModelResult uploadResult = importer.upload(
          FileUpload.create(modelName,
              IOUtils.toByteArray(
                  new ClassPathResource("sample_models/" + modelName).getInputStream())),
          Context.create(userContext, Optional.empty()));
      return importer
          .doImport(uploadResult.getHandleId(), Context.create(userContext, Optional.empty()))
          .get(0);
    } catch (Exception ex) {
      throw new RuntimeException(ex);
    } finally {
      try {
        Thread.sleep(1000);
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/SearchTestInfrastructure.java" startline="589" endline="608" pcid="4170">
  protected ModelInfo importModel(String modelName, IUserContext userContext) {
    try {
      UploadModelResult uploadResult = importer.upload(
          FileUpload.create(modelName,
              IOUtils.toByteArray(
                  new ClassPathResource("sample_models/" + modelName).getInputStream())),
          Context.create(userContext, Optional.empty()));
      return importer
          .doImport(uploadResult.getHandleId(), Context.create(userContext, Optional.empty()))
          .get(0);
    } catch (Exception ex) {
      throw new RuntimeException(ex);
    } finally {
      try {
        Thread.sleep(1000);
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
</source>
</class>

<class classid="75" nclones="3" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/SearchTestInfrastructure.java" startline="560" endline="567" pcid="3779">
    public void publishEvent(ApplicationEvent event) {
      if (event instanceof AppEvent) {
        AppEvent appEvent = (AppEvent) event;
        for (ApplicationListener<AppEvent> listener : listeners) {
          listener.onApplicationEvent(appEvent);
        }
      }
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/MockAppEventPublisher.java" startline="31" endline="38" pcid="4025">
    public void publishEvent(ApplicationEvent event) {
        if (event instanceof AppEvent) {
            AppEvent appEvent = (AppEvent) event;
            for(ApplicationListener<AppEvent> listener : listeners) {
                listener.onApplicationEvent(appEvent);
            }
        }
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/SearchTestInfrastructure.java" startline="623" endline="630" pcid="4173">
    public void publishEvent(ApplicationEvent event) {
      if (event instanceof AppEvent) {
        AppEvent appEvent = (AppEvent) event;
        for (ApplicationListener<AppEvent> listener : listeners) {
          listener.onApplicationEvent(appEvent);
        }
      }
    }
</source>
</class>

<class classid="76" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/TypeSearchSimpleTest.java" startline="41" endline="56" pcid="3815">
  public static void beforeClass() throws Exception {
    testInfrastructure = new SearchTestInfrastructure();
    // importing one model for each supported type here
    // function block
    testInfrastructure.importModel(testInfrastructure.FUNCTIONBLOCK_MODEL);

    // info model
    testInfrastructure.importModel(testInfrastructure.INFORMATION_MODEL);

    // data type
    testInfrastructure.importModel(testInfrastructure.DATATYPE_MODEL);

    // mapping
    testInfrastructure.importModel(testInfrastructure.MAPPING_MODEL);

  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/TypeSearchSimpleTest.java" startline="36" endline="52" pcid="4197">
  public static void beforeClass() throws Exception {
    testInfrastructure = new SearchTestInfrastructure();

    // importing one model for each supported type here
    // function block
    testInfrastructure.importModel(testInfrastructure.FUNCTIONBLOCK_MODEL);

    // info model
    testInfrastructure.importModel(testInfrastructure.INFORMATION_MODEL);

    // data type
    testInfrastructure.importModel(testInfrastructure.DATATYPE_MODEL);

    // mapping
    testInfrastructure.importModel(testInfrastructure.MAPPING_MODEL);

  }
</source>
</class>

<class classid="77" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/core/search/VisibilitySearchSimpleTest.java" startline="37" endline="51" pcid="3870">
  public static void beforeClass() throws Exception {
    testInfrastructure = new SearchTestInfrastructure();
    testInfrastructure.importModel(testInfrastructure.DATATYPE_MODEL);
    List<ModelInfo> model = testInfrastructure.getRepositoryFactory().getRepository( testInfrastructure.createUserContext("alex")).search("*");
    // this is arguably over-cautious, as the next statement would fail all tests anyway
    if (model.isEmpty()) {
      fail("Model is empty after importing.");
    }
    // "alex" user updates the only imported model's visibility to public
    ModelId updated =  testInfrastructure.getRepositoryFactory().getRepository( testInfrastructure.createUserContext("alex"))
        .updateVisibility(model.get(0).getId(), "Public");

    // importing another model as private
     testInfrastructure.importModel( testInfrastructure.INFORMATION_MODEL,  testInfrastructure.createUserContext("alex", "playground"));
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/VisibilitySearchSimpleTest.java" startline="35" endline="54" pcid="4258">
  public static void beforeClass() throws Exception {
    
    testInfrastructure = new SearchTestInfrastructure();
    
    testInfrastructure.importModel(testInfrastructure.DATATYPE_MODEL);
    List<ModelInfo> model = testInfrastructure.getRepositoryFactory()
        .getRepository(testInfrastructure.createUserContext("alex")).search("*");
    // this is arguably over-cautious, as the next statement would fail all tests anyway
    if (model.isEmpty()) {
      fail("Model is empty after importing.");
    }
    // "alex" user updates the only imported model's visibility to public
    ModelId updated = testInfrastructure.getRepositoryFactory()
        .getRepository(testInfrastructure.createUserContext("alex"))
        .updateVisibility(model.get(0).getId(), "Public");

    // importing another model as private
    testInfrastructure.importModel(testInfrastructure.INFORMATION_MODEL,
        testInfrastructure.createUserContext("alex", "playground"));
  }
</source>
</class>

<class classid="78" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/RoleProvider.java" startline="19" endline="25" pcid="4029">
    public static NamespaceRole namespaceAdmin() {
        NamespaceRole namespace_admin = new NamespaceRole();
        namespace_admin.setName("namespace_admin");
        namespace_admin.setPrivileges(7);
        namespace_admin.setRole(32);
        return namespace_admin;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/utils/RoleProvider.java" startline="19" endline="25" pcid="4240">
  public static NamespaceRole namespaceAdmin() {
    NamespaceRole namespace_admin = new NamespaceRole();
    namespace_admin.setName("namespace_admin");
    namespace_admin.setPrivileges(7);
    namespace_admin.setRole(32);
    return namespace_admin;
  }
</source>
</class>

<class classid="79" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/RoleProvider.java" startline="27" endline="33" pcid="4030">
    public static NamespaceRole modelViewer() {
        NamespaceRole model_viewer = new NamespaceRole();
        model_viewer.setName("model_viewer");
        model_viewer.setPrivileges(1);
        model_viewer.setRole(1);
        return model_viewer;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/utils/RoleProvider.java" startline="27" endline="33" pcid="4241">
  public static NamespaceRole modelViewer() {
    NamespaceRole model_viewer = new NamespaceRole();
    model_viewer.setName("model_viewer");
    model_viewer.setPrivileges(1);
    model_viewer.setRole(1);
    return model_viewer;
  }
</source>
</class>

<class classid="80" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/RoleProvider.java" startline="35" endline="41" pcid="4031">
    public static NamespaceRole modelCreator() {
        NamespaceRole model_creator = new NamespaceRole();
        model_creator.setName("model_creator");
        model_creator.setPrivileges(3);
        model_creator.setRole(2);
        return model_creator;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/utils/RoleProvider.java" startline="35" endline="41" pcid="4242">
  public static NamespaceRole modelCreator() {
    NamespaceRole model_creator = new NamespaceRole();
    model_creator.setName("model_creator");
    model_creator.setPrivileges(3);
    model_creator.setRole(2);
    return model_creator;
  }
</source>
</class>

<class classid="81" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/RoleProvider.java" startline="43" endline="49" pcid="4032">
    public static NamespaceRole modelPromoter() {
        NamespaceRole model_promoter = new NamespaceRole();
        model_promoter.setName("model_promoter");
        model_promoter.setPrivileges(3);
        model_promoter.setRole(4);
        return model_promoter;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/utils/RoleProvider.java" startline="43" endline="49" pcid="4243">
  public static NamespaceRole modelPromoter() {
    NamespaceRole model_promoter = new NamespaceRole();
    model_promoter.setName("model_promoter");
    model_promoter.setPrivileges(3);
    model_promoter.setRole(4);
    return model_promoter;
  }
</source>
</class>

<class classid="82" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/RoleProvider.java" startline="51" endline="57" pcid="4033">
    public static NamespaceRole modelPublisher() {
        NamespaceRole model_publisher = new NamespaceRole();
        model_publisher.setName("model_publisher");
        model_publisher.setPrivileges(3);
        model_publisher.setRole(4);
        return model_publisher;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/utils/RoleProvider.java" startline="51" endline="57" pcid="4244">
  public static NamespaceRole modelPublisher() {
    NamespaceRole model_publisher = new NamespaceRole();
    model_publisher.setName("model_publisher");
    model_publisher.setPrivileges(3);
    model_publisher.setRole(4);
    return model_publisher;
  }
</source>
</class>

<class classid="83" nclones="2" nlines="7" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-core/src/test/java/org/eclipse/vorto/repository/utils/RoleProvider.java" startline="59" endline="65" pcid="4034">
    public static NamespaceRole modelReviewer() {
        NamespaceRole model_reviewer = new NamespaceRole();
        model_reviewer.setName("model_reviewer");
        model_reviewer.setPrivileges(3);
        model_reviewer.setRole(8);
        return model_reviewer;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-elasticsearch/src/test/java/org/eclipse/vorto/repository/search/utils/RoleProvider.java" startline="59" endline="65" pcid="4245">
  public static NamespaceRole modelReviewer() {
    NamespaceRole model_reviewer = new NamespaceRole();
    model_reviewer.setName("model_reviewer");
    model_reviewer.setPrivileges(3);
    model_reviewer.setRole(8);
    return model_reviewer;
  }
</source>
</class>

<class classid="84" nclones="2" nlines="11" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/api/impl/DefaultModelGeneration.java" startline="89" endline="99" pcid="4313">
	private GeneratedOutput getGeneratedOutput(HttpResponse response) {
		try {
			String contentDisposition = response.getFirstHeader("Content-Disposition").getValue();
			String filename = contentDisposition.substring(contentDisposition.indexOf("filename = ") + "filename = ".length());
			long length = response.getEntity().getContentLength();
			byte[] content = IOUtils.toByteArray(response.getEntity().getContent());
			return new GeneratedOutput(content, filename, length);
		} catch (IOException e) {
			throw new RepositoryClientException("Error in converting response to GeneratedOutput", e);
		}
	}
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/impl/DefaultRepositoryClient.java" startline="150" endline="161" pcid="4427">
  private GeneratedOutput getGeneratedOutput(HttpResponse response) {
    try {
      String contentDisposition = response.getFirstHeader("Content-Disposition").getValue();
      String filename = contentDisposition
          .substring(contentDisposition.indexOf("filename = ") + "filename = ".length());
      long length = response.getEntity().getContentLength();
      byte[] content = IOUtils.toByteArray(response.getEntity().getContent());
      return new GeneratedOutput(content, filename, length);
    } catch (IOException e) {
      throw new RepositoryClientException("Error in converting response to GeneratedOutput", e);
    }
  }
</source>
</class>

<class classid="85" nclones="2" nlines="9" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/api/impl/ImplementationBase.java" startline="77" endline="85" pcid="4327">
	protected <K> Function<HttpResponse, K> transformToType(Type type) {
		return response -> {
			try {
				return gson.fromJson(IOUtils.toString(response.getEntity().getContent(), "UTF-8"), type);
			} catch (IOException | JsonSyntaxException e) {
				throw new RepositoryClientException("Error in converting result to " + type.getTypeName(), e);
			}
		};
	}
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/impl/ImplementationBase.java" startline="168" endline="177" pcid="4435">
  protected <K> Function<HttpResponse, K> transformToType(Type type) {
    return response -> {
      try {
        return gson.fromJson(IOUtils.toString(response.getEntity().getContent(), "UTF-8"), type);
      } catch (IOException | JsonSyntaxException e) {
        throw new RepositoryClientException("Error in converting result to " + type.getTypeName(),
            e);
      }
    };
  }
</source>
</class>

<class classid="86" nclones="2" nlines="9" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/api/impl/ImplementationBase.java" startline="87" endline="95" pcid="4328">
	protected <K> Function<HttpResponse, K> transformToClass(Class<K> modelClass) {
		return response -> {
			try {
				return gson.fromJson(IOUtils.toString(response.getEntity().getContent(), "UTF-8"), modelClass);
			} catch (IOException | JsonSyntaxException e) {
				throw new RepositoryClientException("Error in converting result to " + modelClass.getName(), e);
			}
		};
	}
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-java-client/src/main/java/org/eclipse/vorto/repository/client/impl/ImplementationBase.java" startline="179" endline="189" pcid="4436">
  protected <K> Function<HttpResponse, K> transformToClass(Class<K> modelClass) {
    return response -> {
      try {
        return gson.fromJson(IOUtils.toString(response.getEntity().getContent(), "UTF-8"),
            modelClass);
      } catch (IOException | JsonSyntaxException e) {
        throw new RepositoryClientException("Error in converting result to " + modelClass.getName(),
            e);
      }
    };
  }
</source>
</class>

<class classid="87" nclones="3" nlines="8" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-boschid/src/main/java/org/eclipse/vorto/repository/oauth/BoschIoTSuiteOAuthProviderConfiguration.java" startline="69" endline="75" pcid="4540">
  private String getBaseUrl(HttpServletRequest request) {
    if (request.getRequestURI().equals("/") || request.getRequestURI().equals("")) {
      return request.getRequestURL().toString();
    } else {
      return request.getRequestURL().toString().replace(request.getRequestURI(), "");
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-github/src/main/java/org/eclipse/vorto/repository/oauth/GithubOAuthProviderConfiguration.java" startline="68" endline="74" pcid="4606">
  private String getBaseUrl(HttpServletRequest request) {
    if (request.getRequestURI().equals("/") || request.getRequestURI().equals("")) {
      return request.getRequestURL().toString();
    } else {
      return request.getRequestURL().toString().replace(request.getRequestURI(), "");
    }
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-eclipse/src/main/java/org/eclipse/vorto/repository/oauth/EclipseOAuthProviderConfiguration.java" startline="84" endline="91" pcid="4588">
  private String getBaseUrl(HttpServletRequest request) {
    if (request.getRequestURI().equals("/") || request.getRequestURI().equals("")) {
      return request.getRequestURL().toString();
    } else {
      return request.getRequestURL().toString().replace(request.getRequestURI(), "");
    }

  }
</source>
</class>

<class classid="88" nclones="2" nlines="10" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-eclipse/src/main/java/org/eclipse/vorto/repository/oauth/EclipseRepositoryAuthProvider.java" startline="51" endline="63" pcid="4593">
  public boolean canHandle(Authentication auth) {
    if (auth == null || !(auth instanceof OAuth2Authentication)) {
      return false;
    }
    
    OAuth2Authentication oauth2Auth = (OAuth2Authentication) auth;
    
    if (oauth2Auth.getOAuth2Request() == null) {
      return false;
    }
    
    return clientId.equals(oauth2Auth.getOAuth2Request().getClientId());
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-github/src/main/java/org/eclipse/vorto/repository/oauth/GithubRepositoryAuthProvider.java" startline="47" endline="59" pcid="4611">
  public boolean canHandle(Authentication auth) {
    if (auth == null || !(auth instanceof OAuth2Authentication)) {
      return false;
    }
    
    OAuth2Authentication oauth2Auth = (OAuth2Authentication) auth;
    
    if (oauth2Auth.getOAuth2Request() == null) {
      return false;
    }
    
    return clientId.equals(oauth2Auth.getOAuth2Request().getClientId());
  }
</source>
</class>

<class classid="89" nclones="2" nlines="15" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-eclipse/src/main/java/org/eclipse/vorto/repository/oauth/EclipseRepositoryAuthProvider.java" startline="78" endline="95" pcid="4596">
  public OAuthUser createUser(Authentication authentication) {
    OAuthUser user = new OAuthUser();
    user.setUserId(authentication.getName());
    user.setDisplayName(authentication.getName());

    if (authentication instanceof OAuth2Authentication) {
      Authentication userAuthentication = ((OAuth2Authentication)authentication).getUserAuthentication();
      if (userAuthentication.getDetails() != null && ((Map)userAuthentication.getDetails()).containsKey("email")) {
        user.setEmail((String)((Map)userAuthentication.getDetails()).get("email"));
      }
    }
    
    Set<String> roles = new HashSet<>();
    authentication.getAuthorities().forEach(e -> roles.add(e.getAuthority()));
    user.setRoles(roles);
    
    return user;
  }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-oauth-github/src/main/java/org/eclipse/vorto/repository/oauth/GithubRepositoryAuthProvider.java" startline="74" endline="91" pcid="4614">
  public OAuthUser createUser(Authentication authentication) {
    OAuthUser user = new OAuthUser();
    user.setUserId(authentication.getName());
    user.setDisplayName(authentication.getName());

    if (authentication instanceof OAuth2Authentication) {
      Authentication userAuthentication = ((OAuth2Authentication)authentication).getUserAuthentication();
      if (userAuthentication.getDetails() != null && ((Map)userAuthentication.getDetails()).containsKey("email")) {
        user.setEmail((String)((Map)userAuthentication.getDetails()).get("email"));
      }
    }
    
    Set<String> roles = new HashSet<>();
    authentication.getAuthorities().forEach(e -> roles.add(e.getAuthority()));
    user.setRoles(roles);
    
    return user;
  }
</source>
</class>

<class classid="90" nclones="2" nlines="5" similarity="100">
<source file="E:/Git/II/latest/vorto/repository/repository-server/src/test/java/org/eclipse/vorto/repository/server/ui/MockApplicationSecurity.java" startline="55" endline="59" pcid="4853">
    private CsrfTokenRepository csrfTokenRepository() {
        HttpSessionCsrfTokenRepository repository = new HttpSessionCsrfTokenRepository();
        repository.setHeaderName("X-XSRF-TOKEN");
        return repository;
    }
</source>
<source file="E:/Git/II/latest/vorto/repository/repository-server-config/src/main/java/org/eclipse/vorto/repository/server/config/config/SecurityConfiguration.java" startline="216" endline="220" pcid="4963">
  private CsrfTokenRepository csrfTokenRepository() {
    HttpSessionCsrfTokenRepository repository = new HttpSessionCsrfTokenRepository();
    repository.setHeaderName("X-XSRF-TOKEN");
    return repository;
  }
</source>
</class>

</clones>
